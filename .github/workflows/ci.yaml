name: Release (Gate with Trivy)
on:
  push:
    tags: ['v*.*.*']

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write     # needed by the next job for GHCR
      security-events: write  # if you upload SARIF (optional)
    env:
      IMAGE: ghcr.io/ronsevetoci/oke-ingress-operator
      TAG: ${{ github.ref_name }}
      LOCAL_TAG: oke-op:${{ github.sha }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      # Build single-arch *loaded* into local Docker for Trivy
      - name: Build (local)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ env.LOCAL_TAG }}
          load: true

      # Cache Trivy DB for speed
      - name: Trivy cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-v1

      - name: Trivy scan (gate)
        uses: aquasecurity/trivy-action@0.22.0
        with:
          image-ref: ${{ env.LOCAL_TAG }}
          format: table
          exit-code: '1'              # <-- gate: fail on findings
          ignore-unfixed: true        # tweak policy as you like
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'   # tighten/loosen as needed

  push:
    needs: build-and-scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE: ghcr.io/ronsevetoci/oke-ingress-operator
      TAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Final build + push (can be multi-arch)
      - name: Build & Push (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE }}:${{ env.TAG }}
            ${{ env.IMAGE }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ env.TAG }}
