name: Release (Trivy-gated to GHCR)

on:
  push:
    tags: ['v*.*.*']        # e.g. v0.1.0, v0.2.1

jobs:
  build-scan-promote:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write       # needed to push to ghcr.io
      # security-events: write   # uncomment if you later upload SARIF

    env:
      IMAGE: ghcr.io/ronsevetoci/oke-ingress-operator
      TAG: ${{ github.ref_name }}
      GATE_TAG: gate-${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 1) Build & push a temporary "gate" image (multi-arch)
      - name: Build & Push (temp gate tag)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.IMAGE }}:${{ env.GATE_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ env.TAG }}

      # 2) Trivy gate: fail on HIGH/CRITICAL
      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: trivy-db-${{ runner.os }}-v1

      - name: Trivy scan (gate)
        uses: aquasecurity/trivy-action@0.22.0
        with:
          image-ref: ${{ env.IMAGE }}:${{ env.GATE_TAG }}
          format: table
          exit-code: '1'                  # gate: fail on findings
          ignore-unfixed: true            # tweak policy as needed
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      # 3) Promote the clean image to the release tag and latest
      - name: Promote to release and latest
        run: |
          docker buildx imagetools create \
            -t "${IMAGE}:${TAG}" \
            -t "${IMAGE}:latest" \
            "${IMAGE}:${GATE_TAG}"

      # 4) (Optional) Keep registry tidy by deleting the temp tag
      #    Skipping deletion is fine if you want traceability.
      - name: Cleanup gate tag (optional)
        run: echo "Keeping ${GATE_TAG} for traceability"